{
    "tiddlers": {
        "$:/plugins/frd/simplecalendardateMacro.js": {
            "text": "/*\\\ntitle: date.js\ntype: application/javascript\nmodule-type: macro\n\nMacro to return a formatted version for a given time\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n*/\n\nexports.name = \"date\";\n\nexports.params = [\n\t{name: \"format\"},\n\t{name: \"year\"},\n\t{name: \"month\"},\n\t{name: \"day\"},\n\t{name: \"h\"},\n\t{name: \"mn\"},\n\t{name: \"sec\"},\n\t{name: \"ms\"}\n];\n\n/*\nRun the macro\n*/\nexports.run = function(format, year, month, day, h, mn, sec, ms) {\n    var d = new Date(year, month - 1, day, h?h:0, mn?mn:0, sec?sec:0, ms?ms:0);\n\treturn $tw.utils.formatDateString(d, format || \"0hh:0mm, DDth MMM YYYY\");\n};\n\n})();\n",
            "type": "application/javascript",
            "title": "$:/plugins/frd/simplecalendardateMacro.js",
            "tags": "",
            "module-type": "macro",
            "modified": "20190206213201980",
            "created": "20160804144315756"
        },
        "$:/plugins/frd/simplecalendar/UtilMacros": {
            "text": "\\define transclude(tid)\n    <$transclude tiddler=\"$tid$\" mode=\"block\"/>\n\\end\n\n\\define sliderCBasic(content imageClosed:\"{{$:/core/images/right-arrow}}\" imageOpen:\"{{$:/core/images/down-arrow}}\" tooltip qual:\"$:/simplecalendar/slider\" default:\"close\")\n\t<$reveal type=\"match\" state=<<qualify $qual$>> text=\"close\" default=$default$ animate=\"yes\">\n\t\t<$button set=<<qualify $qual$>> setTo=\"open\" class=\"tc-btn-invisible\" tooltip=\"\"\"$tooltip$\"\"\">\n\t\t\t$imageClosed$\n\t\t</$button>\n\t</$reveal>\n\t<$reveal type=\"match\" state=<<qualify $qual$>> text=\"open\" default=$default$ animate=\"yes\">\n\t\t<$button set=<<qualify $qual$>> setTo=\"close\" class=\"tc-btn-invisible\" >\n\t\t\t$imageOpen$\n\t\t</$button>\n\t\t$content$\n\t</$reveal>\n\\end",
            "title": "$:/plugins/frd/simplecalendar/UtilMacros",
            "tags": "$:/tags/Macro",
            "modified": "20190206212247691",
            "created": "20170507185501623"
        },
        "$:/plugins/frd/simplecalendar/simplecalendarUtils.js": {
            "text": "/*\\\ntitle: simplecalendarUtils.js\ntype: application/javascript\nmodule-type: library\nInternal utility functions for calendars.\n\\*/\n(function () {\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n// Calendar\n    \n    function calendarArray (year, month, startingDay) {\n        var firstOfMonth = new Date(year, month - 1, 1);\n        var nbDaysInMonth = numberDaysInMonth(year, month);\n        var daysNumArray = [0, 1, 2, 3, 4, 5, 6];\n        var currDay = 0;\n        var w = [];\n        var ymarr = [];\n        var nbComplWeeks;\n        var rem;\n        var nbPrevious = nbDaysOfPreviousMonth(startingDay, firstOfMonth.getDay());\n        rotateArray(startingDay, daysNumArray);\n        w[0] = [];\n        for (var i = 0; i < nbPrevious; i++) {\n            ymarr = previousMonth(year, month);\n            calendarArrayCell(w, ymarr[0], ymarr[1], numberDaysInMonth(ymarr[0], ymarr[1])-nbPrevious+i+1, daysNumArray, 0, i)\n        }\n        for (var i = nbPrevious; i < 7; i++) {\n            currDay += 1;\n            calendarArrayCell(w, year, month, currDay, daysNumArray, 0, i)\n        }\n        nbComplWeeks = Math.floor((nbDaysInMonth-currDay)/7);\n        for (i = 0; i < nbComplWeeks; i++) {\n            w[i+1] = [];\n            for (var j = 0; j < 7; j++) {\n                currDay += 1;\n                calendarArrayCell(w, year, month, currDay, daysNumArray, i + 1, j)\n            }\n        }\n        rem = nbDaysInMonth - currDay;\n        if (rem > 0) {\n            w[nbComplWeeks+1] = [];\n            for (var i = 0; i < rem; i++) {\n                currDay += 1;\n                calendarArrayCell(w, year, month, currDay, daysNumArray, nbComplWeeks + 1, i)\n            }\n            if ((7 - rem) > 0) {\n                currDay = 0;\n                for (var i = rem; i < 7; i++){\n                    currDay += 1;\n                    ymarr = nextMonth(year, month);\n                    calendarArrayCell(w, ymarr[0], ymarr[1], currDay, daysNumArray, nbComplWeeks + 1, i)\n                }\n            }\n        }\n        return w;\n    }\n\n    function calendarArrayCell(calArray, year, month, currDay, daysNumArray, i, j) {\n        calArray[i][j] = [];\n        calArray[i][j][0] = year;\n        calArray[i][j][1] = month;\n        calArray[i][j][2] = currDay;\n        calArray[i][j][3] = daysNumArray[j];\n    }\n\n    function numberDaysInMonth(year, month) {\n        var days;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)  days=31;\n        else if (month == 4 || month == 6 || month == 9 || month == 11) days=30;\n        else if (month == 2)  {\n            if (isLeapYear (year)) {\n                days=29;\n            }\n            else {\n                days=28;\n            }\n        }\n        return days;\n    }\n    \n    function isLeapYear(year) {\n        if (((year % 4)==0) && ((year % 100)!=0) || ((year % 400)==0)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function previousMonth(year, month) {\n        var arr = [];\n        if (month == 1) {\n            arr[1] = 12;\n            arr[0] = year - 1;\n        } else {\n            arr[1] = month - 1;\n            arr[0] = year;\n        }\n        return arr;\n    }\n    \n    function nextMonth(year, month) {\n        var arr = [];\n        if (month == 12) {\n            arr[1] = 1;\n            arr[0] = year + 1;\n        } else {\n            arr[1] = month + 1;\n            arr[0] = year;\n        }\n        return arr;\n    }\n    \n    function nbDaysOfPreviousMonth(startingDay, firstDay) {\n        var nbz = firstDay - startingDay;\n        return (nbz >= 0)? nbz : nbz + 7;\n    }\n\n    function rotateArray(num, arr) {\n        var d;\n        for (var i = 0; i<num; i++) {\n            d = arr.shift();\n            arr.push(d);\n        }\n//        return a;\n    }\n    \n    exports.calendarArray = calendarArray;\n    exports.rotateArray = rotateArray;\n\n    })();",
            "type": "application/javascript",
            "title": "$:/plugins/frd/simplecalendar/simplecalendarUtils.js",
            "tags": "",
            "module-type": "library",
            "modified": "20190206213136664",
            "created": "20160724132050553"
        },
        "$:/plugins/frd/simplecalendar/CalendarMacro": {
            "text": "\\define simplecalendar(name:\"SimpleCalendar\" yearState:\"!!year\" monthState:\"!!month\" startingDay:\"1\" yearInit:\"<<now YYYY>>\" monthInit:\"<<now MM>>\" config:\"$:/plugins/frd/simplecalendar/CalendarConfigDefault\")\n<$vars a={{$yearState$}} b={{$monthState$}} c={{$config$}} yInit=$yearInit$ mInit=$monthInit$>\n\t<$macrocall $name=\"simplecalendarTable\" name=\"\"\"$name$\"\"\" yearState=\"\"\"$yearState$\"\"\" monthState=\"\"\"$monthState$\"\"\" startingDay=\"\"\"$startingDay$\"\"\" yearInit=<<yInit>> monthInit=<<mInit>> config=\"\"\"$config$\"\"\"/>\n</$vars>\n\\end\n",
            "title": "$:/plugins/frd/simplecalendar/CalendarMacro",
            "tags": "$:/tags/Macro",
            "modified": "20190206212342075",
            "created": "20160828145204272"
        },
        "$:/plugins/frd/simplecalendar/CalendarItemTemplate": {
            "text": "{\n    \"background-color\":\"\",\n    \"othercss\": \"\",\n    \"priority\": 0,\n    \"function\": \"e\",\n    \"startingDay\": \"\",\n    \"endingDay\": \"\",\n    \"listOfDays\": \"\",\n    \"listOfDaysNumbers\": \"\"\n}",
            "type": "application/json",
            "title": "$:/plugins/frd/simplecalendar/CalendarItemTemplate",
            "tags": "",
            "priority": "0",
            "modified": "20190206212354227",
            "created": "20170507204927084"
        },
        "$:/plugins/frd/simplecalendar/CalendarHelp/StyleManager": {
            "text": "What I call here a style is a data tiddler containing elements for identifying days and applying a style to them (mainly a background color).\n\n!!!Adding a style\nA style is mainly a background color for a cell. But you can add some other css elements.\n\nClick the \"+\" button at the top of the style manager\n\n!!!Choosing the color\nLook at the line that begins with \"Background-color\" and click on the right arrow after the edit zone. It opens a slider\n\nThen choose with the color picker.\n\nThen close the slider.\n\n!!!Choosing the function\nFor now you can use 5 different function to select the days you want to style :\n\n*All days : the style is applied to all day cells\n*List of days : the stytle is applied to the specified days. Input the days with the following format : YYYY-0MM-0DD (like 2017-05-08) and leave just a space between tw dates.\n*Range of days : the style is applied to the starting day of the range up to the ending day.\n*Day numbers of days : the style is applied to the days corresponding to the numbers. For instance to apply a style to the saturdays and sundays, type ``0 6`` in the arguments.\n*Today : obvious.\n\n!!!Priority\nDon't forget to set a priority ; this is haoxwthe styles are applied. For instance put a low priority (for instance 1) for \"All days\", and a greater one to style the saturdays and sundays, the highiest for \"Today\". This is just a suggestion. Try by yourself.\n\n!!!Important\nWhen you have finished editing a style, click again on the color rectangle to close and save the style.",
            "title": "$:/plugins/frd/simplecalendar/CalendarHelp/StyleManager",
            "tags": "",
            "modified": "20190206212412016",
            "created": "20170508161733788"
        },
        "$:/plugins/frd/simplecalendar/CalendarHelp/Parameters": {
            "text": "|!Parameter name|!Usage|!Default|\n|name|Naming a calendar is useful mainly when you want to use more than one in a TW and don't want the styling of the cells to interfere.|\"~SimpleCalendar\"|\n|yearState|Text reference where to store the year|\"!!yearState\", meaning that the year is stored in the field \"yearState\" of the current tiddler.|\n|monthState|Text reference where to store the month|\"!!monthState\", meaning that the month is stored in the field \"monthState\" of the current tiddler.|\n|startingDay|A number to specify the starting day for the week (0 for Sunday, 1 for Monday, ..., 6 for Saturday)|1 ; week starting on Monday|\n|yearInit|Init value for the year, used if yearState does not exist yet or is empty|``<<now YYYY>>``, meaning the current year is used|\n|monthInit|Init value for the month, used if monthState does not exist yet or is empty|``<<now MM>>``, meaning the current month is used|\n|config|Name of a data tiddler containing some other coonfiguration options|$:/plugins/frd/simplecalendar/CalendarConfigDefault|",
            "title": "$:/plugins/frd/simplecalendar/CalendarHelp/Parameters",
            "tags": "",
            "modified": "20190206212422054",
            "created": "20170508161507016"
        },
        "$:/plugins/frd/simplecalendar/CalendarHelp/Interface": {
            "text": "!!!Changing the month/year\nUse the following buttons at the top of the calendar to go to :\n\n*the previous year &nbsp;&nbsp;<span class=\"help-toolbar-item\">{{$:/core/images/chevron-left}}</span>\n*the previous month &nbsp;&nbsp;<span class=\"help-toolbar-item\">{{$:/core/images/left-arrow}}</span>\n*the next month &nbsp;&nbsp;<span class=\"help-toolbar-item\">{{$:/core/images/right-arrow}}</span>\n*the next year &nbsp;&nbsp;<span class=\"help-toolbar-item\">{{$:/core/images/chevron-right}}</span>\n*the current year and month : by clicking the center cell (with the month and year)\n\n!!!Calling the style manager\nAt the bottom of the calendar you have two thin light grey zones, one on the left, one on the right.\n\nThe left one allows you to display a tiddler to deal with the styling of the calendar cells, the style manager.\n\nThis tiddler is named after the name of the calendar : the prefix is ``$:/simplecalendar/`` then comes the name of the calendar (see macro parameters below) and the suffix is ``_Days``.\n\nFor instance, if you call ``<<simplecalendar>>``, the default name is SimpleCalendar. So the style manager is $:/simplecalendar/SimpleCalendar_Days\n\n!!!Looking for help\n\nThe thin light grey zone at the bottom right of the calendar calls this help tiddler.",
            "title": "$:/plugins/frd/simplecalendar/CalendarHelp/Interface",
            "tags": "",
            "modified": "20190206212434211",
            "created": "20170508161329261"
        },
        "$:/plugins/frd/simplecalendar/CalendarHelp/ConfigTiddler": {
            "text": "This is a data tiddler containing some configuration values for the simplecalendar macro.\n\nYou can modify this tiddler, but it would be more safe to copy it, modify this copy and give this modified tiddler as an argument for the simplecalendar macro.\n\nTo be continued ...",
            "title": "$:/plugins/frd/simplecalendar/CalendarHelp/ConfigTiddler",
            "tags": "",
            "modified": "20190206212451800",
            "created": "20170508163150158"
        },
        "$:/plugins/frd/simplecalendar/CalendarHelp": {
            "text": "This plugin displays a monthly calendar with buttons to modify the month or the year and nice styling features.\n\nTo use it in the simpliest way, just insert ``<<simplecalendar>>`` inside a tiddler.\n\nOf course there are many ways to call this macro :\n\n*using parameters\n*using a config tiddler\n\n!!Interaction\n{{$:/plugins/frd/simplecalendar/CalendarHelp/Interface}}\n\n!!Macro parameters\n{{$:/plugins/frd/simplecalendar/CalendarHelp/Parameters}}\n\n!!Style Manager\n{{$:/plugins/frd/simplecalendar/CalendarHelp/StyleManager}}\n\n!!Config tiddler\n{{$:/plugins/frd/simplecalendar/CalendarHelp/ConfigTiddler}}",
            "title": "$:/plugins/frd/simplecalendar/CalendarHelp",
            "tags": "",
            "modified": "20190206212501463",
            "created": "20170508125450293"
        },
        "$:/plugins/frd/simplecalendar/CalendarDynamicCSS": {
            "text": "<$list filter=\"[tag[CalendarDaysItem]] +[nsort[priority]]\">\n\ntable td.calendar-{{##style}}\n{\n\tbackground-color: {{##background-color}};\n\t{{##othercss}}\n}\n</$list>\n\ntable td.calendar-datepicker-cell .tc-tiddlylink\n{\n\tcolor:red;\n}",
            "title": "$:/plugins/frd/simplecalendar/CalendarDynamicCSS",
            "tags": "$:/tags/Stylesheet",
            "modified": "20190206212515395",
            "created": "20160822104539556"
        },
        "$:/plugins/frd/simplecalendar/CalendarDaysItemFunction": {
            "text": "\\define actions()\n<$list filter=\"[{##function}] +[suffix[holidays]]\" variable=\"functionTiddler\">\n<$action-setfield $index=\"startingDay\" $value=\"\"/>\n<$action-setfield $index=\"endingDay\" $value=\"\"/>\n<$action-setfield $index=\"listOfDaysNumbers\" $value=\"\"/>\n</$list>\n<$list filter=\"[{##function}] +[prefix[holidaysRange]]\" variable=\"functionTiddler\">\n<$action-setfield $index=\"listOfDays\" $value=\"\"/>\n<$action-setfield $index=\"listOfDaysNumbers\" $value=\"\"/>\n</$list>\n<$list filter=\"[{##function}] +[prefix[restdays]]\" variable=\"functionTiddler\">\n<$action-setfield $index=\"startingDay\" $value=\"\"/>\n<$action-setfield $index=\"endingDay\" $value=\"\"/>\n<$action-setfield $index=\"listOfDays\" $value=\"\"/>\n</$list>\n\\end\n\n\\define actions-filter-days()\n<$action-setfield $index=\"listOfDays\" $value=\"\"/>\n<$list filter={{##filterListOfDays}} variable=\"day\">\n<$action-listops $tiddler=<<currentTiddler>> $index=\"listOfDays\" $subfilter=\"[list[days]append<day>]\"/>\n</$list>\n\\end\n\n<$select index='function' actions=<<actions>>>\n<option value='alldays'>All days</option>\n<option value='holidays'>List of days</option>\n<option value='holidaysRange'>Range of days</option>\n<option value='restdays'>Day numbers of days</option>\n<option value='today'>Today</option>\n</$select>&nbsp;&nbsp;&nbsp;Arguments for the function :&nbsp;<$button class=\"tc-btn-invisible\" tooltip='- holidays : list of days in YYY-0MM-ODD format.\nFor instance : \"2016-09-10 2016-10-01 2016-12-25 2016-12-31\"\n\n- holidaysRange : starting day and ending day.\nFor instance : \"2016-09-01\" and \"2016-10-25\"\n\n- restdays : list od day numerical codes (0 for sunday, 1 for monday, ... 6 for saturday).\nFor instance : \"6 0\" for saturday and sunday'> &nbsp;?&nbsp;</$button>\n\n<blockquote class=\"tc-quote\">\n<$list filter=\"[{##function}] +[suffix[holidays]]\" variable=\"functionTiddler\">\nList of days :&nbsp;<$edit-text index=\"listOfDays\" tag=\"input\" size=\"30\"/><br>\nFilter :&nbsp;<$edit-text index=\"filterListOfDays\" tag=\"input\" size=\"30\"/>&nbsp;\n<$button class=\"tc-btn-invisible\" actions=<<actions-filter-days>>>Eval\n</$button>\n</$list>\n\n<$list filter=\"[{##function}] +[prefix[holidaysRange]]\" variable=\"functionTiddler\">\nStarting day :&nbsp;<$edit-text index=\"startingDay\" tag=\"input\" size=\"10\"/>&nbsp;&nbsp;&nbsp;Ending Day :&nbsp;<$edit-text index=\"endingDay\" tag=\"input\" size=\"10\"/>\n\n</$list>\n<$list filter=\"[{##function}] +[prefix[restdays]]\" variable=\"functionTiddler\">\nList of days numbers :&nbsp;<$edit-text index=\"listOfDaysNumbers\" tag=\"input\" size=\"20\"/>\n</$list>\n</blockquote>\n",
            "title": "$:/plugins/frd/simplecalendar/CalendarDaysItemFunction",
            "modified": "20190206212527305",
            "created": "20160821165807498"
        },
        "$:/plugins/frd/simplecalendar/CalendarCSS": {
            "text": ".calendar-input-priority { width:3em; }\n\nbutton.btn-toolbar-item  svg { fill:LightGrey; height:1.5em; width:1.5em }\n\n.help-toolbar-item  svg { height:1em; width:1em }\n\n.tc-sidebar-lists table button\n{\n\tcolor:inherit;\n\tfill:inherit;\n}\n\n.calendar-bottom-cancel {\n\theight:5px;\n\tpadding:0px;\n\tbackground-color:LightGrey;\n        display:block;\n}\n\n.btn-display {\ndisplay:none;\n}\n\n.calendar-bottom-cancel:hover>button{\n        display:block;\n}\n\ntable tr.calendar-bottom {\n    line-height:6px;\n}\n\ntable tr.calendar-bottom button {\n    line-height:6px;\n}\n\ntable td.calendar-bottom-left {\n    padding:0px;\n    background-color:#f0f0f0;\n}\n\ntable td.calendar-bottom-left>button {\n    width:100%;\n}\n\ntable td.calendar-bottom-center{\n    padding:0px;\n    background-color:LightGrey;\n}\n\ntable td.calendar-bottom-center>button {\n    width:100%;\n}\n\ntable td.calendar-bottom-right{\n    padding:0px;\n    background-color:#f0f0f0;\n}\n\ntable td.calendar-bottom-right>button {\n    width:100%;\n}\n\n\ntable.calendar-table {\n\tmargin-bottom:0px;\n}\n\ntable td.calendar-bottom\n{\n\tborder:none;\n\tpadding:0px;\n}\n\ntable td.calendar-bottom button\n{\n\twidth:100%;\n\tborder:none;\n}\n\ntable td.calendar-datepicker-cell .tc-tiddlylink\n{\n\tcolor:red;\n}\n\n\n.calendar-datepicker table th, .calendar-datepicker table td\n{\n\tpadding:0 4px 0 4px;\n\tfont-size:90%;\n}\n\n.calendar-pop {\n\tbackground:white;\n\tpadding:0 15px;\n\tborder-radius: 3px;\n\tborder: 1px solid #ccc;\n\tmargin:5px 0 0 3px;\n}",
            "type": "text/css",
            "title": "$:/plugins/frd/simplecalendar/CalendarCSS",
            "tags": "$:/tags/Stylesheet",
            "modified": "20190206212854693",
            "created": "20160731185653542"
        },
        "$:/plugins/frd/simplecalendar/CalendarConfigDefault": {
            "text": "{\n    \"startingDay\": \"1\",\n    \"days\": [\"Di\", \"Lu\", \"Ma\", \"Me\", \"Je\", \"Ve\", \"Sa\"],\n\t\"months\": [\"Jan\", \"Fev\", \"Mars\", \"Avr\", \"Mai\",\"Juin\", \"Juil\", \"Aout\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"],\n\t\"buttons\": \"yes\",\n\t\"buttonsImages\": [\"{{$:/core/images/chevron-left}}\", \"{{$:/core/images/left-arrow}}\", \"{{$:/core/images/right-arrow}}\", \"{{$:/core/images/chevron-right}}\"],\n\t\"cellContent\": \"sc_linkNavigateToOrCreateEditModeJournal\",\n\t\"format\": \"YYYY-0MM-0DD\"\n}",
            "type": "application/json",
            "title": "$:/plugins/frd/simplecalendar/CalendarConfigDefault",
            "tags": "",
            "modified": "20190206212548008",
            "created": "20160829124345776"
        },
        "$:/plugins/frd/simplecalendar/calendarCellCSSMacro.js": {
            "text": "/*\\\ntitle: calendarCellCSSMacro.js\ntype: application/javascript\nmodule-type: macro\n\n<<calendarCellCss name year month day dayNum>>\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n\n*/\n    \nvar CSSFunctions = require(\"$:/plugins/frd/simplecalendar/calendarCellCSSFunctions.js\").CSSFunctions;\n\nexports.name = \"calendarCellCSS\";\n\nexports.params = [\n\t{ name: \"name\" },\n\t{ name: \"year\" },\n\t{ name: \"month\" },\n\t{ name: \"day\" },\n\t{ name: \"dayNum\" }\n];\n\n/*\nRun the macro\n*/\nexports.run = function calendarCellCSS (name, year, month, day, dayNum) {\n\tvar f, l, item, style, datePickerDate, currTid;\n\tvar classes=[];\n    var res;\n// Dealing with the DaysItems\n\tvar arr = this.wiki.getTiddlersWithTag(name);\n    l = arr.length;\n    for (var i = 0;i < l;i++) {\n        item = this.wiki.getTiddlerData(arr[i],\"erreur\");\n        if (item === \"erreur\") return \"Error in CalendarDaysItem : \" + arr[i];\n        f = CSSFunctions[item[\"function\"]];\n        if (typeof f === \"function\") {\n            if (f(year, month, day, dayNum, item)) {\n//                style = this.wiki.getTiddlerData(item[\"style\"],\"erreur\");\n//                if (style === \"erreur\") return \"Error in CalendarDaysStyle : \" + item[\"style\"];\n                classes.push(\"calendar-\" + item[\"style\"]);\n            }\n        }\n    }\n// Dealing with the datePicker CSS function\n    \n    if (this.getVariable(\"datePicker\") == \"yes\") {\n        datePickerDate = this.getVariable(\"datePickerDate\");\n        f = CSSFunctions[\"datepicker\"];\n        if (f(year, month, day, dayNum, datePickerDate)) classes.push(\"calendar-datepicker-cell\");\n    }\n    \n    return classes.join(\" \");\n//    return \"fonction : \" + item[\"function\"] + \"  res : \" + res;\n}\n\n})();",
            "type": "application/javascript",
            "title": "$:/plugins/frd/simplecalendar/calendarCellCSSMacro.js",
            "module-type": "macro",
            "modified": "20190206212820947",
            "created": "20160731152813621"
        },
        "$:/plugins/frd/simplecalendar/calendarCellCSSFunctions.js": {
            "text": "/*\\\ntitle: calendarCellCSSFunctions.js\ntype: application/javascript\nmodule-type: library\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this library\n\n*/\n\nvar CSSFunctions={\n    \n    alldays: function(year, month, day, dayNum, item) {\n        return true;\n    },\n\t\n\trestdays: function(year, month, day, dayNum, item) {\n        var arr = item[\"listOfDaysNumbers\"].split(\" \");\n        var l = arr.length;\n        var result = false;\n        for (var i = 0; i < l ; i++) {\n            if (parseInt(arr[i], 10) == parseInt(dayNum, 10)) result = true;\n        }\n\t\treturn result;\n\t},\n\t\n\tholidays: function(year, month, day, dayNum, item){\n        var arr = item[\"listOfDays\"].split(\" \");\n\t\tvar date = year + \"-\" + $tw.utils.pad(month) + \"-\" +$tw.utils.pad(day);\n\t\tif (arr.indexOf(date) !== -1) return true;\n\t\telse return false;\n\t},\n    \n    holidaysRange: function(year, month, day, dayNum, item) {\n\t\tvar currentDate = new Date(year, month - 1, day);\n        var startDateArray = item[\"startingDay\"].split(\"-\");\n        var startDate = new Date(startDateArray[0], startDateArray[1] - 1, startDateArray[2]);\n        var endDateArray = item[\"endingDay\"].split(\"-\");\n        var endDate = new Date(endDateArray[0], endDateArray[1] - 1, endDateArray[2]);\n        if ((currentDate >= startDate) && (currentDate <= endDate)) return true;\n        else return false;\n    },\n\t\t\n\ttoday: function(year, month, day, dayNum, item) {\n\t\tvar d = new Date();\n\t\tvar y = d.getFullYear();\n\t\tvar m = d.getMonth()+1;\n\t\tvar dd = d.getDate();\n\t\tvar todaydate = y + \"-\" + $tw.utils.pad(m) + \"-\" + $tw.utils.pad(dd);\n\t\tvar currentdate = year + \"-\" + $tw.utils.pad(month) + \"-\" + $tw.utils.pad(day);\n\t\tif(todaydate === currentdate) return true;\n\t\telse return false;\n\t},\n    \n    datepicker: function(year, month, day, dayNum, date) {\n        var d = new Date(year, month - 1, day);\n        var format = $tw.wiki.getTiddlerText(\"$:/config/NewJournal/Title\");\n        return ($tw.utils.formatDateString(d, format || \"DDth MMM YYYY\") == date);\n    }\n}\n\nexports.CSSFunctions = CSSFunctions;\n\n\n})();",
            "type": "application/javascript",
            "title": "$:/plugins/frd/simplecalendar/calendarCellCSSFunctions.js",
            "tags": "",
            "module-type": "library",
            "modified": "20190206212804581",
            "created": "20160731193027141"
        },
        "$:/plugins/frd/simplecalendar/CalendarCellContentMacros": {
            "text": "\\define sc_basic(year month day dayNum format)\n$day$\n\\end\n\n\\define sc_linkNavigateToJournal(year month day dayNum format)\n    <$set name=\"journalTitle\" value=<<date \"$format$\" $year$ $month$ $day$>>>\n        <$button class=\"tc-btn-invisible\">\n            <$link to=<<journalTitle>> tooltip=<<journalTitle>>>$day$\n                <$action-navigate $to=<<journalTitle>>/>\n            </$link>\n        </$button>\n    </$set>\n\\end\n\n\\define sc_linkNavigateToOrCreateViewModeJournal(year month day dayNum format)\n    <$set name=\"journalTitle\" value=<<date \"$format$\" $year$ $month$ $day$>>>\n\t\t<$list filter=<<sc_LNTOCVMJ_filter>>>\n\t\t\t<$button class=\"tc-btn-invisible tc-tiddlylink\" tooltip=<<journalTitle>>>\n\t\t\t\t<$action-setfield $tiddler=\"NewJournalTemplate\" $field=\"title\" $value=<<journalTitle>>/>\n\t\t\t\t<$action-navigate $to=<<journalTitle>>/>\n\t\t\t\t//$day$//\n\t\t\t</$button>\n\t\t</$list>\n\t\t<$list filter=<<sc_LNTOCEMJ_filter>>>\n\t\t\t<$button class=\"tc-btn-invisible tc-tiddlylink\" tooltip=<<journalTitle>>>\n\t\t\t\t<$action-navigate $to=<<journalTitle>>/>\n\t\t\t\t$day$\n\t\t\t</$button>\n\t\t</$list>\n    </$set>\n\\end\n\n\\define sc_linkNavigateToOrCreateEditModeJournal(year month day dayNum format)\n    <$set name=\"journalTitle\" value=<<date \"$format$\" $year$ $month$ $day$>>>\n\t\t<$list filter=<<sc_LNTOCVMJ_filter>>>\n\t\t\t<$button class=\"tc-btn-invisible tc-tiddlylink\" tooltip=<<journalTitle>>>\n\t\t\t\t<$action-sendmessage $message=\"tm-new-tiddler\" $param=\"NewJournalTemplate\" title=<<journalTitle>>/>\n\t\t\t\t//$day$//\n\t\t\t</$button>\n\t\t</$list>\n\t\t<$list filter=<<sc_LNTOCEMJ_filter>>>\n\t\t\t<$button class=\"tc-btn-invisible tc-tiddlylink\" tooltip=<<journalTitle>>>\n\t\t\t\t<$action-navigate $to=<<journalTitle>>/>\n\t\t\t\t$day$\n\t\t\t</$button>\n\t\t</$list>\n    </$set>\n\\end\n\n\\define sc_LNTOCVMJ_filter() [[$(journalTitle)$]] +[is[missing]]\n\n\\define sc_LNTOCEMJ_filter() [[$(journalTitle)$]] +[is[tiddler]]\n",
            "title": "$:/plugins/frd/simplecalendar/CalendarCellContentMacros",
            "tags": "$:/tags/Macro",
            "modified": "20190206212625184",
            "created": "20160831153337592"
        },
        "$:/plugins/frd/simplecalendar/CalendarBackgroundPicker": {
            "text": "<$macrocall $name='colour-picker' actions=\"\n<$action-setfield $tiddler=<<itemTitle>> $index='background-color' $value=<<colour-picker-value>>/>\n\"/>",
            "title": "$:/plugins/frd/simplecalendar/CalendarBackgroundPicker",
            "tags": "",
            "modified": "20190206212636588",
            "created": "20160810133206504"
        },
        "$:/plugins/frd/simplecalendar/simplecalendarTable.js": {
            "text": "/*\\\ntitle: simplecalendarTable.js\ntype: application/javascript\nmodule-type: macro\n\n    author : François Deblon, francois.deblon@yahoo.fr\n\n<<simplecalendarTable name yearState monthState startingDay yearInit monthInit config>>\n\n\\*/\n(function () {\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n\n*/\n    \n    var utils = require(\"$:/plugins/frd/simplecalendar/simplecalendarUtils.js\");\n\n    exports.name = \"simplecalendarTable\";\n    exports.params = [\n        { name: \"name\" },\n        { name: \"yearState\" },\n        { name: \"monthState\" },\n        { name: \"startingDay\" },\n        { name: \"yearInit\" },\n        { name: \"monthInit\" },\n        { name: \"config\" }\n    ];\n\n/*\nRun the macro\n*/\n    \n/*  Displays a monthly calendar.\n    @params :\n\t\t\t\t- name : \n\t\t\t\t- yearState and monthState are textReferences (see tiddlywiki.com)\n                like \"tiddler\" (the field is the text field), \"!!field\" \n                (the tiddler is the current tiddler), or \"tiddler!!field\"\n                - startingDay is a number coding a day :\n                \"0\" for sunday, \"1\" for monday, ..., \"6\" for saturday\n                - yearInit and monthInit are init values for the year or month\n                - config is a json tiddler for more options (names of days, months,\n                choice of functions for cell content, css, ...)\n\t\t\t\t-b format : \n    @return :   a string of mixed html and wikitext representing a monthly calendar\n\n*/\n\n    exports.run = function simplecalendarTable(name, yearState, monthState, startingDay,\n                                          yearInit, monthInit, config) {\n\t\t\t\n        var w, l, conf, days, arr;\n        var str = \"\", pyear = \"\", pmonth = \"\", parsedYear = \"\", parsedMonth = \"\";\n        \n        //  Load the config tiddler ; if not specified, the tiddler \"calendarConfigDefault\" is used\n        conf = this.wiki.getTiddlerData(config,\"error\");\n        if (conf === \"error\") return \"Error config\";\n        else {\n\t\t\tif (conf.format == \"default\") conf.format = this.wiki.getTiddlerText(\"$:/config/NewJournal/Title\");\n            //  Parse the states (year and month) if any\n            if (yearState) {\n                parsedYear = $tw.utils.parseTextReference(yearState);   //  returns an object\n                pyear = getValueFromParsed(this, parsedYear);           //  returns the value of the state\n\t\t\t\tif (pyear == \"no tiddler\") return \"The state tiddler for the year does not exist ; create it before calling the simplecalendar macro\";\n            }                                                           //  (as a string)\n            if(monthState) {\n                parsedMonth = $tw.utils.parseTextReference(monthState); //  idem for the month\n                pmonth = getValueFromParsed(this, parsedMonth);\n\t\t\t\tif (pmonth == \"no tiddler\") return \"The state tiddler for the month does not exist ; create it before calling the simplecalendar macro\";\n            }\n            //  Get the numerical values of year, month and startingDay.\n            //  Return an array containing the numerical values for year, month and startingDay.\n            arr = getParamsValues(pyear, pmonth, startingDay, yearInit, monthInit);\n            if (typeof arr === 'string') return arr;    // error in the given params.\n            //  Runs the calendarArray function from \"calendarUtils\" to get an array (w) corresponding to\n            //  the year, month and startingDay.\n            w = utils.calendarArray(arr[0], arr[1], arr[2]);\n//            l = w.length;\n            utils.rotateArray(arr[2], conf.days);\n            //  Build the output string of the macro from the numerical array.\n            str += \"<table class='calendar-table'>\";\n            //  Title with or without buttons to change month and year\n            str += calendarTitle(parsedYear, parsedMonth, arr[0], arr[1], conf);\n            //  The row containing the abbreviated days names\n            str+=\"<tr><th>\"+conf.days.join(\"</th><th>\")+\"</th></tr>\";\n            //  The cells of the calendar\n            str += calendarCells(w, name, conf);\n            str += calendarBottom(name);\n            str += \"</table>\";\n            return str;\n        }\n            \n    }\n/* \n*   Fonctions for building the calendar table\n*/\n\n//  Builds the string for the first row of the calendar table : the title\n//  with or without buttons.\n//  There are three possible values for conf.buttons :\n//  - \"no\" : no buttons\n//  - \"images\" : images are displayed (those in conf.buttonsImages), 2 before the title, 2 after\n//  - other values : buttons are displayed. They allow to change the month and year\n//  (except when there are no states)\n    \n    function calendarTitle(parsedYear, parsedMonth, y, m, conf) {\n        var s = \"\";\n        var date, yearNow, monthNow;\n        //  \n        if (conf.buttons === \"no\") {\n\t\t\ts += \"<th colspan='7'>\" + conf.months[m - 1] + \" \" + y + \"</th>\";\n//\n        } else if (conf.buttons === \"images\") {\n            s += \"<tr><td>\" + conf.buttonsImages[0] + \"</td><td>\" + conf.buttonsImages[1] + \"</td>\";\n            s += \"<th colspan='3'>\" + conf.months[m - 1] + \" \" + y + \"</th>\";\n            s += \"<td>\" + conf.buttonsImages[2] + \"</td><td>\" + conf.buttonsImages[3] +\"</td></tr>\";\n//\n        } else {\n            s += \"<tr>\";\n//  Button for previous year.\n\t\t\ts += \"<td class='tc-popup-handle'><$button class='tc-btn-invisible'>\" + conf.buttonsImages[0];\n            s += setStateValue(parsedYear, y - 1);\n            s += \"</$button></td>\";\n//  Button for previous month.\n            s += \"<td class='tc-popup-handle'><$button class='tc-btn-invisible'>\" + conf.buttonsImages[1];\n            if (m == 1) {\n                s += setStateValue(parsedMonth, 12);\n                s += setStateValue(parsedYear, y - 1);\n            } else s += setStateValue(parsedMonth, m - 1);\n            s += \"</$button></td>\";\n//  Title.\n            s += \"<th colspan='3' class='tc-popup-handle'>\";\n            s += \"<$button class='tc-btn-invisible'>\" + conf.months[m - 1] + \" \" + y;\n            date = new Date();\n            yearNow = date.getFullYear();\n            monthNow = date.getMonth() +1;\n            s += setStateValue(parsedYear, yearNow);\n            s += setStateValue(parsedMonth, monthNow);\n            s += \"</$button></th>\";\n//  Button for next month.\n            s += \"<td class='tc-popup-handle'><$button class='tc-btn-invisible'>\" + conf.buttonsImages[2];\n            if (m == 12) {\n                s += setStateValue(parsedMonth, 1);\n                s += setStateValue(parsedYear, y + 1);\n            } else s += setStateValue(parsedMonth, m + 1);\n            s += \"</$button></td>\";\n//  Button for next year.\n\t\t\ts += \"<td class='tc-popup-handle'><$button class='tc-btn-invisible'>\" + conf.buttonsImages[3];\n            s += setStateValue(parsedYear, y + 1);\n            s += \"</$button></td>\";\n//\n\t\t\ts+=\"</tr>\";\n        }\n        return s;\n    }\n    \n    function setStateValue(parsedState, value) {\n        var s = \"<$action-setfield \";\n        if (parsedState.title) s += \"$tiddler=\" + parsedState.title;\n        if (parsedState.field) s += \" $field=\" + parsedState.field;\n        s += \" $value=\" + value + \"/>\";\n        return s;\n    }\n    \n    function calendarCells(w, name, conf) {\n        var s = \"\", l = w.length;\n        for (var i = 0; i < l; i++) {\n            s += \"<tr>\";\n            for (var j = 0; j<7; j++) {\n                s += \"<td class=<<calendarCellCSS \" + name + \" \" + w[i][j][0] +\" \";\n                s += w[i][j][1] + \" \" +w[i][j][2] + \" \" + w[i][j][3] + \">>>\";\n                s += \"<<\" + conf.cellContent + \" \" + w[i][j][0] + \" \";\n                s += w[i][j][1] + \" \" +w[i][j][2] + \" \" + w[i][j][3] + \" '\" + conf.format + \"'>></td>\";\n            }\n            s += \"</tr>\";\n        }\n        return s;\n    }\n    \n    function calendarBottom(name) {\n\t\tvar title = \"$:/simplecalendar/\" + name + \"_Days\";\n        var s = \"<tr class='calendar-bottom'>\";\n        s += \"<td colspan='3' class='calendar-bottom-left'>\";\n        s += \"<$button class='tc-btn-invisible' tooltip='Days'>\";\n        s += \"<$action-setfield $tiddler='\" + title + \"' calendar='\" + name +\"' \";\n\t\ts += \"text='{{||$:/plugins/frd/simplecalendar/DaysTemplate}}'/>\";\n\t\ts += \"<$action-navigate $to='\" + title + \"'/>&nbsp;</$button>\";\n        s += \"</td><td class='calendar-bottom-center'>\";\n        s += \"</td><td colspan='3' class='calendar-bottom-right'>\";\n        s += \"<$button to='$:/plugins/frd/simplecalendar/CalendarHelp' class='tc-btn-invisible' tooltip='CalendarHelp'>&nbsp;</$button>\";\n\t\ts += \"</td></tr>\";\n        return s;\n    }\n\n/* \n*   Fonctions for getting values of parameters from state, and probing the values\n*/\n    \n//  When a text reference is 'parsed' with $tw.utils.parseTextReference, the result is an object\n//  with 2 fields (if they are not empty) : title (the title of the tiddler), and field (the field\n//  where the state lives).\n//  This function deals with the differents cases and returns the value of the state as a string.\n\n    function getValueFromParsed(widget, parsed) {\n        var res = \"\", tiddler;\n        \n        //  If there is a field, the value of the field of the tiddler (or current tiddler \n        //  if there is no title field) is returned\n        if (parsed.field) {\n            tiddler = $tw.wiki.getTiddler(\n                parsed.title ? parsed.title : widget.getVariable(\"currentTiddler\"));\n\t\t\tif (tiddler === undefined) {\n\t\t\t\tres = \"\";\n\t\t\t} else {\n\t\t\t\tres = tiddler.getFieldString(parsed.field); //  returns \"\" if missing field\n\t\t\t//  if there is no field, the text field of the tiddler is returned.\n\t\t\t}\n\t\t} else {\n            res = $tw.wiki.getTiddlerText(parsed.title,\"\");\n\t\t\t}\n\t\treturn res;\n    }\n\n//  This functions gets the numerical values of year, month and dayNum from the states\n//  and the init values. Returns an array of 3 numbers : year, month and dayNum.\n\n    function getParamsValues(pyear, pmonth, startingDay, yearInit, monthInit) {\n        var a = [];\n        var y, m;\n\t\t\n\t\ty = pyear;\n\t\tm = pmonth;\n        //  If there is no state for the year or the state is empty, we take yearInit if not empty.\n        //  If empty, we take the current year.\n        if (y === \"\") y = yearInit;\n        a[0] = probeAndParseData(y, \"year\");\n        if (a[0] === false) return\n                \"Bad year value or bad range in yearState or yearInit\" + pyear + \" \" + yearInit;\n        //  Idem for the month\n        if (m === \"\") m = monthInit;\n        a[1] = probeAndParseData(m, \"month\");\n        if (a[1] === false) return \n                \"Bad month value or bad range in monthState or monthInit\" + pmonth + \" \" + monthInit;\n        a[2] = probeAndParseData(startingDay, \"startingDay\");\n        if (a[2] === false) return \"Bad value or bad range in startingDay : \" +startingDay;\n\t\t\n        return a;\n    }\n    \n//  This functions gets the numerical value from the string and tests whether\n//  the value is a number and is inside the right range.\n\n    function probeAndParseData(data, field) {\n        var num = parseInt(data, 10);\n        if (isNaN(num)) num = false;\n        else {\n            if ((field === \"year\") && ((num < 999) || (num > 9999))) num = false;\n            else if ((field === \"month\") && ((num < 1) || (num > 12))) num = false;\n            else if ((field === \"startingDay\") && ((num < 0) || (num > 6))) num = false;\n        }\n        return num;\n    }\n   \n\n})();",
            "type": "application/javascript",
            "title": "$:/plugins/frd/simplecalendar/simplecalendarTable.js",
            "tags": "",
            "module-type": "macro",
            "modified": "20190208181521966",
            "created": "20160821184052456"
        },
        "$:/plugins/frd/simplecalendar/DaysTemplate": {
            "created": "20170508093537877",
            "text": "\\define colorRect(width height color)\n\t<svg width=\"$width$\" height=\"$height$\">\n\t\t<rect width=\"$width$\" height=\"$height$\" style=\"fill:$color$;\" />\n\t</svg> \n\\end\n\n\\define color-rect(daysItem)\n\t<$set name=\"color\" value={{$daysItem$##background-color}}>\n\t\t<$macrocall $name=\"colorRect\" width=30 height=20 color=<<color>>/>\n\t</$set>\n\\end\n\n\\define filter-calendar-days() [tag{!!calendar}tag[CalendarDaysItem]] +[!sort[title]] +[nsort[priority]]\n\n\\define filter-holidays() [{$(itemTitle)$##function}] +[suffix[holidays]]\n\n\\define filter-anyDay() [{$(itemTitle)$##function}] +[prefix[alldays]]\n\n\\define filter-range() [{$(itemTitle)$##function}] +[prefix[holidaysRange]]\n\n\\define filter-dayNumbers() [{$(itemTitle)$##function}] +[prefix[restdays]]\n\n\\define filter-today() [{$(itemTitle)$##function}] +[prefix[today]]\n\n\\define dataFromItem(index)\n{{$(itemTitle)$##$index$}}\n\\end\n\n\\define actions-editDaysItem()\n\t<$action-setfield $field=\"reveal-edit\" $value=<<itemTitle>>/>\n\\end\n\n\\define actions-editDaysItemClose()\n\t<$wikify name=\"prio\" text=<<dataFromItem priority>>>\n\t<$action-setfield $tiddler=<<itemTitle>> $field=\"priority\" $value=<<prio>>/>\n\t</$wikify>\n\t<$action-setfield $field=\"reveal-edit\" $value=\"\"/>\n\\end\n\n\\define filter-newItemTags() [{!!calendar}] [[CalendarDaysItem]]\n\n\\define actions-createItem()\n<$set name=\"tags\" filter=<<filter-newItemTags>>>\n\t<$action-setfield $tiddler=<<itemTitle>> text={{$:/plugins/frd/simplecalendar/CalendarItemTemplate}} type=\"application/json\" tags=<<tags>>/>\n\t<$action-setfield $tiddler=<<itemTitle>> $index=\"style\" $value=<<style>>/>\n\t<$action-setfield $field=\"reveal-edit\" $value=<<itemTitle>>/>\n</$set>\n\\end\n\n\\define actions-deleteItems()\n\t<$list filter=<<filter-calendar-days>>>\n\t\t<$action-deletetiddler $tiddler=<<currentTiddler>>/>\n\t</$list>\n\\end\n\n<$set name=\"style\" value=<<now \"ItemYYYY0MM0DD0hh0mm0ss\">>>\n        <$wikify name=\"itemTitle\" text=\"$:/simplecalendar/<<style>>\">\n        <$button class=\"tc-btn-invisible btn-toolbar-item\" tooltip=\"Create new item\" actions=<<actions-createItem>>>\n                {{$:/core/images/new-button}}\n        </$button>\n        </$wikify>\n</$set>\n&nbsp;&nbsp;\n<$button class=\"tc-btn-invisible btn-toolbar-item\" tooltip=\"Delete all items\" actions=<<actions-deleteItems>>>\n\t\t{{$:/core/images/delete-button}}\n</$button>\n\n<$list filter=<<filter-calendar-days>> variable=\"itemTitle\">\n\n\t<$reveal type=\"nomatch\" text={{!!reveal-edit}} default=<<itemTitle>>>\n\t\t<$button class=\"tc-btn-invisible\" tooltip=\"Edit\" actions=<<actions-editDaysItem>>>\n\t\t\t<$macrocall $name=\"color-rect\" daysItem=<<itemTitle>>/>\n\t\t</$button>\n\t</$reveal>\n\t<$reveal type=\"match\" text={{!!reveal-edit}} default=<<itemTitle>>>\n\t\t<$button class=\"tc-btn-invisible\" tooltip=\"Close\" actions=<<actions-editDaysItemClose>>>\n\t\t\t<$macrocall $name=\"color-rect\" daysItem=<<itemTitle>>/>\n\t\t</$button>\n\t</$reveal>\n&nbsp;&nbsp;\n\t<span style=\"font-size:1em;\"><$view tiddler=<<itemTitle>> index=\"priority\"/></span>\n&nbsp;&nbsp;\n\t<$button class=\"tc-btn-invisible\" to=<<itemTitle>> tooltip=\"Navigate to item\" style=\"fill:LightGrey;\">{{$:/core/images/chevron-up}}</$button>\n&nbsp;&nbsp;\n\t<$button class=\"tc-btn-invisible\" message=\"tm-delete-tiddler\" param=<<itemTitle>>  tooltip=\"Delete item\" style=\"fill:LightGrey;\">{{$:/core/images/delete-button}}</$button>\n&nbsp;&nbsp;\n\t<$list filter=<<filter-today>> variable=\"f\">\nToday\n\t</$list>\n\t<$list filter=<<filter-anyDay>> variable=\"f\">\nOrdinary days\n\t</$list>\n\t<$list filter=<<filter-holidays>> variable=\"f\">\nList of days :&nbsp;<<dataFromItem listOfDays>>\n\t</$list>\n\t<$list filter=<<filter-range>> variable=\"f\">\nStarting day :&nbsp;<<dataFromItem startingDay>>&nbsp;&nbsp;&nbsp;Ending Day :&nbsp;<<dataFromItem endingDay>>\n\t</$list>\n\t<$list filter=<<filter-dayNumbers>> variable=\"f\">\nDay numbers :&nbsp;<<dataFromItem listOfDaysNumbers>>\n\t</$list>\n\n\t<$reveal type=\"match\" text={{!!reveal-edit}} default=<<itemTitle>>>\n\t\t<div style=\"border:1px solid LightGrey;border-radius:5px;padding:8px;\">\nBackground-color :&nbsp;<$edit-text tiddler=<<itemTitle>> index=\"background-color\" tag=\"input\" />\n\t\t\t<$set name=\"tid\" value=<<transclude \"$:/plugins/frd/simplecalendar/CalendarBackgroundPicker\">>>\n\t\t\t\t<<sliderCBasic $(tid)$>>\n\t\t\t</$set>\n<br><br>\t\t\t\nFunction : &nbsp;\n\t\t\t<$tiddler tiddler=<<itemTitle>>>\n\t\t\t\t{{||$:/plugins/frd/simplecalendar/CalendarDaysItemFunction}}\n\t\t\t</$tiddler><br>\n\t\t\t<div><span style=\"vertical-align:top;\">\nPriority : &nbsp;<$edit-text tiddler=<<itemTitle>> index=\"priority\" tag=\"input\" class=\"calendar-input-priority\"/></span>&nbsp;&nbsp;<span style=\"vertical-align:top;\">\nOther Css : &nbsp;</span><$edit-text tiddler=<<itemTitle>> index=\"othercss\" tag=\"textarea\" />\n\t\t\t</div>\n\t\t</div>\n\t</$reveal>\n</$list>",
            "title": "$:/plugins/frd/simplecalendar/DaysTemplate",
            "tags": "",
            "modified": "20190218092622757"
        }
    }
}